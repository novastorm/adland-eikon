# THIS reverse-proxy.conf.template FILE IS AUTOGENERATED BY THE environment-update.sh script
# you should update by modifying environment-config.yaml and re-running environment-update.sh

# this is an nginx configuration template (see "Using environment variables in nginx configuration"
# at https://hub.docker.com/_/nginx
# It should be hooked up to the .env file used by docker-compose, so should not need to be edited when
# you deploy services outside of docker-compose in debug mode

# Note that when we define upstreams, we use the *internal* port of the service, the one defined
# by their EXPOSE command in their docker image, not the *external* port that docker-compose
# sets up port forwarding to



upstream apiserver {
    server ${APISERVER_HOST}:${APISERVER_INTERNAL_PORT};
    include upstream_params;
}


# this extra config is needed to configure the socket-service correctly,
# following the example from https://www.nginx.com/blog/websocket-nginx/
# modified to pass '' through, as that matches what is generated by the ingres-nginx in production
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' '';
}


server {
    listen       ${REVERSE_PROXY_INTERNAL_PORT};
    listen  [::]:${REVERSE_PROXY_INTERNAL_PORT};
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    
    location /api/ {
        include proxy_params;
        proxy_pass http://apiserver/api/;
    }
}
